name: "2. Terraform Apply"

on:
  workflow_dispatch:

jobs:
  plan:
    name: Terraform Apply
    runs-on: ubuntu-20.04
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Initialise Terraform
        run: |
          terraform init -input=false \
            -backend-config="container_name=${{ secrets.AZURE_STORAGE_BACKEND_CONTAINER_NAME }}"
        env:
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}
          NEW_RELIC_ACCOUNT_ID: ${{ vars.NEW_RELIC_ACCOUNT_ID }}
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file="variables.tfvars" -input=false -no-color -out=tfplan \
          && terraform show -no-color tfplan
        env:
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}
          NEW_RELIC_ACCOUNT_ID: ${{ vars.NEW_RELIC_ACCOUNT_ID }}
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}

      - name: Terraform Apply
        if: steps.plan.outcome == 'success'
        id: apply
        run: |
          terraform apply -input=false -no-color tfplan
        env:
          ARM_CLIENT_SECRET:  ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SAS_TOKEN: ${{ secrets.ARM_SAS_TOKEN }}
          NEW_RELIC_ACCOUNT_ID: ${{ vars.NEW_RELIC_ACCOUNT_ID }}
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}